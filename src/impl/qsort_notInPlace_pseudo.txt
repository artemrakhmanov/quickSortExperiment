https://stackoverflow.com/questions/7717691/why-is-the-minimalist-example-haskell-quicksort-not-a-true-quicksort

func qsort(List a) -> List

    if a.size() <= 1
        return a

    else:
        lastIndex = a.size() - 1
        pivot = a.get(lastIndex)

        List letfPartition
        List rightPartition

        for (i, i < lastIndex, i++)
            element = a[i]
            if element <= pivot
                leftPartition.add(element)
            else
            /*
             if equal, goes to the right as in the left would
            yield an empty left partition upon next qsort
            partitioning
            */
                rightPartition.add(element)

        List result

        result = qsort(leftPartition)
        result.add(pivot)
        result.addAll(qsort(rightPartition))

        return result